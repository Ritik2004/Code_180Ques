import java.util.* ;
public class Solution {
	public static boolean isLeaf(TreeNode root){
		if(root.left == null && root.right == null){
			return true;
		}
		return false;
	}
	public static void addLeaf(TreeNode root, ArrayList<Integer> ans){
        if(isLeaf(root)){
			ans.add(root.data);
			return;
		}
		if(root.left!=null) addLeaf(root.left,ans);
		if(root.right!=null) addLeaf(root.right,ans);
	}
	public static void leftMove(TreeNode root, ArrayList<Integer> ans){
		TreeNode cur = root.left;
		while(cur!=null){
		if(isLeaf(cur) == false) ans.add(cur.data);
		if(cur.left != null) cur=cur.left;
		else cur=cur.right;
		}
	}
	public static void rightMove(TreeNode root, ArrayList<Integer> ans){
		ArrayList<Integer> temp = new ArrayList<>();
		TreeNode cur = root.right;
		while(cur!=null){
		if(isLeaf(cur) == false) temp.add(cur.data);
		if(cur.right!=null) cur=cur.right;
		else cur = cur.left;
	}
	for(int i=temp.size()-1;i>=0;i--){
		ans.add(temp.get(i));
	}
	}
	public static ArrayList<Integer> traverseBoundary(TreeNode root){
		// Write your code here.
		ArrayList<Integer> ans = new ArrayList<>();
		if(isLeaf(root) == false){
			ans.add(root.data);
		}
		leftMove(root,ans);
		addLeaf(root,ans);
		rightMove(root,ans);
		return ans;
	}
}
