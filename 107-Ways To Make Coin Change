
public class Solution {

	public static long countWaysToMakeChange(int denominations[], int value){
        //write your code here
		int n = denominations.length;
		int m = value;
		long dp[][] = new long[n+1][m+1];
		dp[0][0] =1;

		for(int i=0;i<=n;i++){
			for(int j=0;j<=m;j++){
				if(i==0){
					dp[i][j] = 0;
				}
				if(j==0){
					dp[i][j] = 1;
				}
			}
		}
        for(int i=1;i<=n;i++){
			for(int j=1;j<=m;j++){
				if(denominations[i-1]<=j){
					dp[i][j] = dp[i][j-denominations[i-1]] + dp[i-1][j];
				}
				else{
					dp[i][j] = dp[i-1][j];
				}
			}
		}
        return dp[n][m];
	}
	
}
