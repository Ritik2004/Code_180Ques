import java.util.* ;
public class Solution {
	public static List<Integer> zigZagTraversal(BinaryTreeNode<Integer> root) {
		// Write your code here!
       List<List<Integer>> ans=new ArrayList<>();
	    List<Integer> mans = new ArrayList<>();
		if(root == null){
			return mans;
		}
	   Boolean flag = true;
	   Queue<BinaryTreeNode<Integer>> q = new LinkedList<>();
	   q.add(root);
	   while(!q.isEmpty()){
		   List<Integer> temp1 = new ArrayList<>();
		   int s = q.size();
		   while(s-->0){
			   BinaryTreeNode<Integer> temp = q.poll();
			   if(temp.left!=null){
				   q.add(temp.left);
			   }
			   if(temp.right!=null){
				   q.add(temp.right);
			   }
               if(flag){
				   temp1.add(temp.data);
			   }
			   else{
			   temp1.add(0, temp.data);
			   }
		   }
		   flag=!flag;
		   ans.add(temp1);
	   }
	  
	   for(List<Integer>l : ans){
		   mans.addAll(l);
	   }
	   return mans;
	}
}
