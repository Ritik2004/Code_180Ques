class Activity{
    int start;
    int end;
    int pos;

    Activity(int start,int end, int pos){
        this.start=start;
        this.end=end;
        this.pos=pos;
    }
}
class activityComparator implements Comparator<Activity>{
    public int compare(Activity o1, Activity o2){
        if(o1.end<o2.end){
            return -1;
        }
        else if(o1.end>o2.end){
            return 1;
        }
        else if(o1.pos<o2.pos){
            return -1;
        }
        return 1;
    }
}
public class Solution {
    public static int maximumActivities(List<Integer> start, List<Integer> end) {
        //Write your code here
        List<Activity> act = new ArrayList<>();
        for(int i=0;i<end.size();i++){
            act.add(new Activity(start.get(i),end.get(i),i+1));
        }
        activityComparator mc = new activityComparator();
        Collections.sort(act, mc);
        ArrayList<Integer> ans = new ArrayList<>();
        ans.add(act.get(0).pos);
       int limit = act.get(0).end;

        for(int i=1;i<start.size();i++){
            if(act.get(i).start>=limit){
                ans.add(act.get(i).pos);
                limit = act.get(i).end;
            }
        }
        return ans.size();
    }
}
