import java.util.*;
public class Solution {
     public static void add(int board[][], int n, ArrayList<ArrayList<Integer>> ans){
                 ArrayList<Integer> temp = new ArrayList<>();
                         for(int i=0;i<board.length;i++){
                                     for(int j=0;j<board[0].length;j++){
                                                     temp.add(board[i][j]);
                    }
                  }
                                 ans.add(temp);
                      }
     
    public static boolean isSafe(int board[][] ,int row ,int col, int n){
        int duprow = row;
                int dupcol = col;
        for(int i=row-1,j=col;i>=0;i--){
            if(board[i][j] == 1){
                return false;
            }
        }
        row = duprow;
        col = dupcol;
        for(int i=row-1,j=col-1;i>=0&&j>=0;i--,j--){
            if(board[i][j] == 1){
                return false;
            }
        }
         row = duprow;
         col = dupcol;
        for(int i=row-1,j=col+1;i>=0&&j<n;i--,j++){
             if(board[i][j] == 1){
                 return false;
           }
             
        }
        return true;
    }

    public static void solve(int board[][], ArrayList<ArrayList<Integer>> ans, int n, int row){
                if(row>=n){
                            add(board,n,ans);
                            return;       
             }
     for(int j=0;j<n;j++){
            if(isSafe(board,row,j,n)){
            board[row][j] = 1;
         solve(board,ans,n,row+1);
            board[row][j] = 0;
    }
                                }
     }
    
  public static ArrayList<ArrayList<Integer>> solveNQueens(int n) {
              // Write your code here.
                      int board[][] = new int[n][n];
                              ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
                                      solve(board, ans, n,0);
                                              return ans;
                                                  }
  }
