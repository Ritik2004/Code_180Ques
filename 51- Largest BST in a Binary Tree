class Node_value{
	    int min;
		    int max;
			    int size;
				    
					    Node_value(int min, int max, int size)
						    {
							        this.min=min;
									        this.max=max;
											        this.size=size;
													    }
														}
public class Solution {
	static Node_value largestBSThelper(TreeNode<Integer> root){

	if(root==null)
	        {
			            return new Node_value(Integer.MAX_VALUE,Integer.MIN_VALUE,0);
						        }
		Node_value left = largestBSThelper(root.left);
		Node_value right = largestBSThelper(root.right);

        
 if(left.max<root.data&&right.min>root.data)
         {
		             return new Node_value(Math.min(root.data,left.min),Math.max(root.data,right.max),left.size+right.size+1);
					         }

         else{
		  return new Node_value(Integer.MIN_VALUE,Integer.MAX_VALUE,Math.max(left.size,right.size));
						        }
								    }
	public static int largestBST(TreeNode<Integer> root) {
		// Write your code here.
	Node_value n= largestBSThelper(root);
	        
			        return n.size;
	}
} 
