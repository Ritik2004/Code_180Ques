    public static int path(int dp[][], int m, int n){
        
        if(m==0 && n==0){
            return 1;
        }
        if(m<0 || n<0){
            return 0;
        }
        if(dp[m][n]!=-1) return dp[m][n];
        int top = path(dp,m-1,n);
        int left = path(dp,m,n-1);

        return dp[m][n] = left+top;
    }
    public int uniquePaths(int m, int n) {
        int dp[][] = new int[m][n];
          for (int[] row : dp){
        Arrays.fill(row, -1);
          }
          return path(dp,m-1,n-1);
    }
}
