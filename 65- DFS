

class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public static void dfs(int node, boolean visit[],ArrayList<ArrayList<Integer>> adj, ArrayList<Integer> ans){
        visit[node] = true;
        ans.add(node);
        for(int it:adj.get(node)){
            if(!visit[it]){
                dfs(it,visit,adj,ans);
            }
        }
    }
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
       
        ArrayList<Integer> ans = new ArrayList<>();
        boolean visit[] = new boolean[V+1];
        for(int i=0;i<V;i++){
            if(!visit[i]){
                dfs(0,visit, adj,ans);
            }
        }
        return ans;
    }
}
